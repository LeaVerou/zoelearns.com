@property --extrude-height {
	syntax: '<length>';
	inherits: true;
	initial-value: 0;
}

@property --progress {
	syntax: '<percentage>';
	inherits: true;
	initial-value: 0%;
}


@media (pointer: coarse) {
	* {
		-webkit-user-select: none;
		user-select: none;
	}

	:root {
		padding-bottom: 1px;
	}
}

:root {
	--font-emoji: Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, emoji;

	--vw: 1vw;
	--vh: 1vh;

	--vmin: var(--vh);

	--extrude-height: .3em;
}

@supports (width: 1dvw) {
	:root {
		--vw: 1dvw;
		--vh: 1dvh;
	}
}

body {
	display: flex;
	flex-flow: column;
	margin: 0;
	padding: 1.4rem;
	background: hsl(220 10% 60%) linear-gradient(rgb(0 0 0 / .2), rgb(0 0 0 / .2)) no-repeat 0 0 / 0 .5em;
	box-sizing: border-box;
	min-height: calc(100 * var(--vh));
	font: 230%/1.5 system-ui, sans-serif;
	font-size: calc(100% + var(--vw) + var(--vh));
}

body.playing {
	transition: background-size linear 800ms;
	background-size: 100% .5em;
}

@keyframes spin {
	to {
		rotate: 1turn;
	}
}

.loading body::after {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	margin: -.5em;
	width: 1em;
	height: 1em;
	border-radius: 50%;
	border: 10px solid white;
	border-top-color: transparent;
	animation: spin 1s linear infinite;
}

button {
	position: relative;
	background: white;
	font: inherit;
	box-shadow: 0 var(--extrude-height) hsl(220 10% 80%), 0 var(--extrude-height) 1rem rgb(0 0 0 / .4);
	border-radius: .3em;
	border: none;
	cursor: pointer;
	font: inherit;
	transform: translateY(calc(-1 * var(--extrude-height)));
	border: 2px solid white;
}

	button:active {
		--extrude-height: 0;
	}

	button:focus {
		border-color: yellow;
		outline: none;
	}

button[data-letter] {
	display: inline-flex;
	align-items: center;
	justify-content: space-around;
	padding: .2em .3em;
	--color: oklch(50% .3 calc(var(--index) * (360 / 24)));
	background: linear-gradient(to right, white 50%, var(--color) 0);
}

	button[data-letter] .lower {
		color: white;
	}

	button[data-letter] .upper {
		color: var(--color);
	}

#letters_section {
	display: grid;
	--columns: 4;
	grid-template-columns: repeat(var(--columns), minmax(auto, 1fr));
	gap: .8em .5em;
	align-items: stretch;
	justify-content: stretch;
	flex: 1;
	transition: .5s opacity;
}

	@media (width < 600px) {
		#letters_section {
			--columns: 3;
		}
	}

	.loading #letters_section {
		opacity: 0;
	}

.lower {
	font-weight: bold;
}